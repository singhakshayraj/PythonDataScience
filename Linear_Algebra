def vector_add(a,b):
    return [i+j for i,j in zip(a,b)]
def vector_sub(a,b):
    return [i-j for i,j in zip(a,b)]
def vector_sum(a):
    return [sum(i) for i in a]
def scalar_multiply(a,x):
    return [i*x for i in a]
def mean(a):
    return sum(a)/len(a)
def vector_mean(vector):
    return [sum(i)//len(i) for i in vector]
def dot(a,b):
    k=[i*j for i,j in zip(a,b)]
    return sum(k)
def sum_of_squares(vector):
    return [sum(dot(i,i)) for i in vector]
def magnitude(vector):
    return [math.sqrt(sum(dot(i,i))) for i in vector]
def squared_distance(a,b):
    return sum(dot(vector_sub(a,b),vector_sub(a,b)))
def distance(a,b):
    return math.sqrt(float(squared_distance(a,b)))
def variance(x):
    n=len(x)
    deviation=mean(x)
    return sum_of_squares(deviation)
def var(x):
    j=[]
    mu=la.mean(x)
    count=0
    for i in x:
        j=i-mu
        p=j*j
        count=count+p
    n=len(x)-1
    k=count/n
    return k
def std_dev(v):
    v1=var(v)
    return math.sqrt(v1)
def Covariance(x,y):
    n=len(x)
    dot=la.dot(de_mean(x),de_mean(y))
    s=sum(dot)
    return s/(n-1)
def de_mean(x):
    x_bar=mean(x)
    return [i-x_bar for i in x]
def correlation(x,y):
    sd_x = std_dev(x)
    sd_y = std_dev(y)
    if sd_x > 0 and sd_y > 0:
        return Covariance(x,y) / (sd_x * sd_y)
    else:
        return 0

